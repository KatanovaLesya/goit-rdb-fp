Не ігноруємо 0 при підрахунку:

SELECT 
    c.Entity AS country_name,
    c.Code AS country_code,
    AVG(ic.Number_rabies) AS avg_rabies,
    MIN(ic.Number_rabies) AS min_rabies,
    MAX(ic.Number_rabies) AS max_rabies,
    SUM(ic.Number_rabies) AS total_rabies
FROM infectious_cases_normalized ic
JOIN countries c ON ic.country_id = c.country_id
WHERE ic.Number_rabies IS NOT NULL
GROUP BY c.Entity, c.Code
ORDER BY avg_rabies DESC
LIMIT 10;

Щоб ігнорувати 0 при підрахунку такий запит:

SELECT 
    c.Entity AS country_name,
    c.Code AS country_code,
    AVG(NULLIF(ic.Number_rabies, 0)) AS avg_rabies,         -- Ігноруємо 0 при підрахунку середнього
    MIN(NULLIF(ic.Number_rabies, 0)) AS min_rabies,         -- Ігноруємо 0 при підрахунку мінімального
    MAX(ic.Number_rabies) AS max_rabies,                    -- Максимальне значення без змін
    SUM(NULLIF(ic.Number_rabies, 0)) AS total_rabies        -- Ігноруємо 0 при сумуванні
FROM infectious_cases_normalized ic
JOIN countries c ON ic.country_id = c.country_id
WHERE ic.Number_rabies IS NOT NULL AND ic.Number_rabies > 0  -- Видаляємо 0 ще до обчислення
GROUP BY c.Entity, c.Code
ORDER BY avg_rabies DESC
LIMIT 10;

Ігноруємо 0 - тільки коли берем мінімальне значення:

SELECT 
    c.Entity AS country_name,
    c.Code AS country_code,
    AVG(ic.Number_rabies) AS avg_rabies,
    MIN(NULLIF(ic.Number_rabies, 0)) AS min_rabies,
    MAX(ic.Number_rabies) AS max_rabies,
    SUM(ic.Number_rabies) AS total_rabies
FROM infectious_cases_normalized ic
JOIN countries c ON ic.country_id = c.country_id
WHERE ic.Number_rabies IS NOT NULL
GROUP BY c.Entity, c.Code
ORDER BY avg_rabies DESC
LIMIT 10;
